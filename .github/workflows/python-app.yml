# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Application

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9.13']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        export GITHUB_ACTIONS=true
        make install
    - name: Create env file
      run: |
        touch .env
        echo RELOAD=true >> .env

        echo DB_DRIVERNAME=${{ secrets.DB_DRIVERNAME }} >> .env
        echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env

        echo SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }} >> .env
        echo SENDGRID_EMAIL=${{ secrets.SENDGRID_EMAIL }} >> .env

        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
        echo ALGORITHM=${{ secrets.ALGORITHM }} >> .env
        echo ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} >> .env
        cat .env
    - name: Test Application
      run: |
        make test